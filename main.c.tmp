#include "libft.h"

// Elements list structure
typedef struct Element Element;
struct Element
{
	int value;
	Element *next;
};

// List structure (contain first element of the list structure)
typedef struct List List;
struct List
{
	Element *first;
};

// init_list
List	*init_list()
{
	List	*my_list = malloc(sizeof(*my_list));
	Element	*my_element = malloc(sizeof(*my_element));

	if (!my_list || !my_element)
		return (0);

	my_element->value = 0;
	my_element->next = NULL;
	my_list->first = my_element;

	return (my_list);
}

// add_element

int	add_element_fst_pos(List *my_list, int new_number)
{
	Element	*my_new_element = malloc(sizeof(*my_new_element));
	if (!my_list || !my_new_element)
		return (0);
	my_new_element->value = new_number;
	my_new_element->next =  my_list->first;
	my_list->first = my_new_element;
	return (1);
}

// show_list_content
int	show_list_content(List *list)
{
	if (!list)
		return (0);
	Element *current_element = list->first;
	while (current_element)
	{
		printf("current element : %d\n", current_element->value);
		current_element = current_element->next;
	}
	printf("NULL\n");
	return (1);
}

// delete_element
int	delete_first_element(List *my_list)
{
	if (!my_list)
		return (0);

	if (my_list->first)
	{
		Element	*to_delete = my_list->first;
		my_list->first = my_list->first->next;
		free(to_delete);
	}
	return (1);
}

// delete_entire_list
int	delete_entire_list(List *list)
{
	if (!list)
		return (0);
	while (list->first)
		delete_first_element(list);
	return (1);
}

// insert_element
int	insert_element(List *my_list, int new_number)
{
	Element	*my_new_element = malloc(sizeof(*my_new_element));
	if (!my_list || !my_new_element)
		return (0);
	my_new_element->value = new_number;
	my_new_element->next =  my_list->first;
	my_list->first = my_new_element;
	return (1);
}

int	main(void)
{
	List *my_list = init_list();
	add_element(my_list, 5);
	add_element(my_list, 32);
	add_element(my_list, 9);
	delete_first_element(my_list);
	add_element(my_list, 907);
	show_list_content(my_list);

	printf("deletion ...\n");

	delete_entire_list(my_list);
	show_list_content(my_list);

	return (0);
}
